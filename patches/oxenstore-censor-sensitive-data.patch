CA-136105: Elide Windows clipboard content in xenstore logs

diff --git a/tools/ocaml/xenstored/logging.ml b/tools/ocaml/xenstored/logging.ml
index 4c90032..e669a3e 100644
--- a/tools/ocaml/xenstored/logging.ml
+++ b/tools/ocaml/xenstored/logging.ml
@@ -285,16 +285,29 @@ let init_access_log post_rotate = match !access_log_destination with
 	| Syslog facility ->
 		access_logger := Some (make_syslog_logger facility)
 
+let censor_private_data access_type data =
+       let key_is_private k =
+              String.startswith "/local/domain" k &&
+                   (String.endswith "/data/set_clipboard" k ||
+                   String.endswith "/data/report_clipboard" k) ||
+                   k = "data/report_clipboard"
+       in
+       match access_type, String.split ~limit:2 ' ' data with
+       | XbOp Xenbus.Xb.Op.Write, k :: _ when key_is_private k ->
+                       sprintf "%s [omitted]" k
+       | _ -> data
+
 let access_logging ~con ~tid ?(data="") ~level access_type =
         try
 		maybe
 			(fun logger ->
 				let date = string_of_date() in
 				let tid = string_of_tid ~con tid in
-				let access_type = string_of_access_type access_type in
 				let data = sanitize_data data in
+				let censored_data = censor_private_data access_type data in
+				let access_type = string_of_access_type access_type in
 				let prefix = prefix !access_log_destination date in
-				let msg = Printf.sprintf "%s %s %s %s" prefix tid access_type data in
+				let msg = Printf.sprintf "%s %s %s %s" prefix tid access_type censored_data in
 				logger.write ~level msg)
 			!access_logger
 	with _ -> ()
diff --git a/tools/ocaml/xenstored/stdext.ml b/tools/ocaml/xenstored/stdext.ml
index b8a8fd0..6a4b091 100644
--- a/tools/ocaml/xenstored/stdext.ml
+++ b/tools/ocaml/xenstored/stdext.ml
@@ -69,6 +69,11 @@ let fold_left f accu string =
 let startswith prefix x =
 	let x_l = String.length x and prefix_l = String.length prefix in
 	prefix_l <= x_l && String.sub x 0 prefix_l  = prefix
+
+(** True if string 'x' ends with suffix 'suffix' *)
+let endswith suffix x =
+ 	let x_l = String.length x and suffix_l = String.length suffix in
+ 	suffix_l <= x_l && String.sub x (x_l - suffix_l) suffix_l = suffix
 end
 
 module Unixext = struct
