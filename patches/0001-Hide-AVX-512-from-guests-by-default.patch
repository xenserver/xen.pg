From 03485312488c8ca65b08f2bd44ab00383a599cea Mon Sep 17 00:00:00 2001
From: Sergey Dyasli <sergey.dyasli@citrix.com>
Date: Tue, 26 Jun 2018 09:39:27 +0100
Subject: [PATCH] Hide AVX-512 from guests by default

It can be enabled by providing "cpuid=avx512" in Xen's cmdline.

Signed-off-by: Sergey Dyasli <sergey.dyasli@citrix.com>
diff --git a/xen/arch/x86/cpu-policy.c b/xen/arch/x86/cpu-policy.c
index 83dd2a39840b..2bf191591bf6 100644
--- a/xen/arch/x86/cpu-policy.c
+++ b/xen/arch/x86/cpu-policy.c
@@ -34,6 +34,8 @@ static const struct feature_name {
     unsigned int bit;
 } feature_names[] __initconstrel = INIT_FEATURE_NAMES;
 
+int8_t __initdata opt_avx512 = -1;
+
 /*
  * Parse a list of cpuid feature names -> bool, calling the callback for any
  * matches found.
@@ -112,6 +114,8 @@ static void __init _parse_xen_cpuid(
     {
         if ( strcmp(name, "doitm") == 0 )
             opt_doitm = val;
+        else if ( strcmp(name, "avx512") == 0 )
+            opt_avx512 = val;
 
         return;
     }
diff --git a/xen/arch/x86/setup.c b/xen/arch/x86/setup.c
index 9beb56c7207c..e26058611e3f 100644
--- a/xen/arch/x86/setup.c
+++ b/xen/arch/x86/setup.c
@@ -1635,6 +1635,15 @@ void __init noreturn __start_xen(unsigned long mbi_p)
     if ( opt_invpcid && cpu_has_invpcid )
         use_invpcid = true;
 
+    /*
+     * AMD has an AVX512 implementation which doesn't adversely impact
+     * package-wide frequently.  Disable AVX512 by default in other cases.
+     */
+    if ( opt_avx512 == -1 )
+        opt_avx512 = (boot_cpu_data.x86_vendor & X86_VENDOR_AMD);
+    if ( !opt_avx512 )
+        setup_clear_cpu_cap(X86_FEATURE_AVX512F);
+
     init_speculation_mitigations();
 
     init_idle_domain();
diff --git a/xen/include/asm-x86/cpuid.h b/xen/include/asm-x86/cpuid.h
index b32ba0bbfe5c..412376cf1833 100644
--- a/xen/include/asm-x86/cpuid.h
+++ b/xen/include/asm-x86/cpuid.h
@@ -10,6 +10,8 @@
 
 #include <public/sysctl.h>
 
+extern int8_t opt_avx512;
+
 extern const uint32_t known_features[FSCAPINTS];
 
 /*
diff --git a/xen/tools/gen-cpuid.py b/xen/tools/gen-cpuid.py
index 2bd6fd8db6c4..ce8dcb6fe28c 100755
--- a/xen/tools/gen-cpuid.py
+++ b/xen/tools/gen-cpuid.py
@@ -320,6 +320,9 @@ def crunch_numbers(state):
     pseduo_names = (
         # Data Operand Invariant Timing Mode.  Lives in MSR_ARCH_CAPS
         "doitm",
+
+        # AVX512
+        "avx512",
     )
 
     for n in pseduo_names:
