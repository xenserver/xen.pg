From 41a9caae153884e62698a9725389755924422b8f Mon Sep 17 00:00:00 2001
From: Ross Lagerwall <ross.lagerwall@citrix.com>
Date: Wed, 6 Apr 2016 13:55:05 +0000
Subject: [PATCH 1/2] pygrub: Ignore GRUB2 if statements

SLES 12's default GRUB config has the following code before any entries:
if [ -n "$extra_cmdline" ]; then
  submenu "Bootable snapshot #$snapshot_num" {
    menuentry "If OK, run 'snapper rollback' and reboot." { true; }
  }
fi

This prevents pygrub from booting using the default entry. Since I'm not
aware of any distro GRUB config which puts useful entries within
conditionals, ignore them.

Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
diff --git a/tools/pygrub/examples/sles-12-sp1.grub2 b/tools/pygrub/examples/sles-12-sp1.grub2
new file mode 100644
index 0000000..4f04ae6
--- /dev/null
+++ b/tools/pygrub/examples/sles-12-sp1.grub2
@@ -0,0 +1,215 @@
+#
+# DO NOT EDIT THIS FILE
+#
+# It is automatically generated by grub2-mkconfig using templates
+# from /etc/grub.d and settings from /etc/default/grub
+#
+
+### BEGIN /etc/grub.d/00_header ###
+set btrfs_relative_path="y"
+export btrfs_relative_path
+if [ -f ${config_directory}/grubenv ]; then
+  load_env -f ${config_directory}/grubenv
+elif [ -s $prefix/grubenv ]; then
+  load_env
+fi
+
+if [ "${env_block}" ] ; then
+  load_env -f "${env_block}"
+fi
+
+if [ "${next_entry}" ] ; then
+   set default="${next_entry}"
+   set next_entry=
+   save_env next_entry
+   if [ "${env_block}" ] ; then
+     save_env -f "${env_block}" next_entry
+   fi
+   set boot_once=true
+else
+   set default="${saved_entry}"
+fi
+
+if [ x"${feature_menuentry_id}" = xy ]; then
+  menuentry_id_option="--id"
+else
+  menuentry_id_option=""
+fi
+
+export menuentry_id_option
+
+if [ "${prev_saved_entry}" ]; then
+  set saved_entry="${prev_saved_entry}"
+  save_env saved_entry
+  set prev_saved_entry=
+  save_env prev_saved_entry
+  set boot_once=true
+fi
+
+function savedefault {
+  if [ -z "${boot_once}" ]; then
+    saved_entry="${chosen}"
+    save_env saved_entry
+  fi
+}
+
+function load_video {
+  if [ x$feature_all_video_module = xy ]; then
+    insmod all_video
+  else
+    insmod efi_gop
+    insmod efi_uga
+    insmod ieee1275_fb
+    insmod vbe
+    insmod vga
+    insmod video_bochs
+    insmod video_cirrus
+  fi
+}
+
+if [ x$feature_default_font_path = xy ] ; then
+   font=unicode
+else
+insmod part_msdos 
+insmod btrfs
+set root='hd0,msdos2'
+if [ x$feature_platform_search_hint = xy ]; then
+  search --no-floppy --fs-uuid --set=root --hint='hd0,msdos2'  97d1bdcb-648f-42fe-9448-840b7fa6ec13
+else
+  search --no-floppy --fs-uuid --set=root 97d1bdcb-648f-42fe-9448-840b7fa6ec13
+fi
+    font="/usr/share/grub2/unicode.pf2"
+fi
+
+if loadfont $font ; then
+  set gfxmode=auto
+  load_video
+  insmod gfxterm
+  set locale_dir=$prefix/locale
+  set lang=en_US
+  insmod gettext
+fi
+terminal_output gfxterm
+insmod part_msdos 
+insmod btrfs
+set root='hd0,msdos2'
+if [ x$feature_platform_search_hint = xy ]; then
+  search --no-floppy --fs-uuid --set=root --hint='hd0,msdos2'  97d1bdcb-648f-42fe-9448-840b7fa6ec13
+else
+  search --no-floppy --fs-uuid --set=root 97d1bdcb-648f-42fe-9448-840b7fa6ec13
+fi
+insmod gfxmenu
+loadfont ($root)/boot/grub2/themes/SLE/ascii.pf2
+loadfont ($root)/boot/grub2/themes/SLE/DejaVuSans10.pf2
+loadfont ($root)/boot/grub2/themes/SLE/DejaVuSans12.pf2
+loadfont ($root)/boot/grub2/themes/SLE/DejaVuSans-Bold14.pf2
+insmod png
+set theme=($root)/boot/grub2/themes/SLE/theme.txt
+export theme
+if [ x${boot_once} = xtrue ]; then
+  set timeout=0
+elif [ x$feature_timeout_style = xy ] ; then
+  set timeout_style=menu
+  set timeout=8
+# Fallback normal timeout code in case the timeout_style feature is
+# unavailable.
+else
+  set timeout=8
+fi
+if [ -n "$extra_cmdline" ]; then
+  submenu "Bootable snapshot #$snapshot_num" {
+    menuentry "If OK, run 'snapper rollback' and reboot." { true; }
+  }
+fi
+### END /etc/grub.d/00_header ###
+
+### BEGIN /etc/grub.d/10_linux ###
+menuentry 'SLES 12-SP1'  --class sles --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-simple-97d1bdcb-648f-42fe-9448-840b7fa6ec13' {
+	load_video
+	set gfxpayload=keep
+	insmod gzio
+	insmod part_msdos 
+	insmod btrfs
+	set root='hd0,msdos2'
+	if [ x$feature_platform_search_hint = xy ]; then
+	  search --no-floppy --fs-uuid --set=root --hint='hd0,msdos2'  97d1bdcb-648f-42fe-9448-840b7fa6ec13
+	else
+	  search --no-floppy --fs-uuid --set=root 97d1bdcb-648f-42fe-9448-840b7fa6ec13
+	fi
+	echo	'Loading Linux xen ...'
+	linux	/boot/vmlinuz-xen root=UUID=97d1bdcb-648f-42fe-9448-840b7fa6ec13  ${extra_cmdline} console=xvc0 xencons=xvc resume=/dev/xvda1 splash=silent quiet showopts
+	#linux	/boot/vmlinuz-3.12.49-11-xen root=UUID=97d1bdcb-648f-42fe-9448-840b7fa6ec13  ${extra_cmdline} console=xvc0 xencons=xvc resume=/dev/xvda1 splash=silent quiet showopts
+	echo	'Loading initial ramdisk ...'
+	initrd	/boot/initrd-xen
+	#initrd	/boot/initrd-3.12.49-11-xen
+}
+submenu 'Advanced options for SLES 12-SP1' --hotkey=1 $menuentry_id_option 'gnulinux-advanced-97d1bdcb-648f-42fe-9448-840b7fa6ec13' {
+	menuentry 'SLES 12-SP1, with Linux xen' --hotkey=2 --class sles --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-xen-advanced-97d1bdcb-648f-42fe-9448-840b7fa6ec13' {
+		load_video
+		set gfxpayload=keep
+		insmod gzio
+		insmod part_msdos 
+		insmod btrfs
+		set root='hd0,msdos2'
+		if [ x$feature_platform_search_hint = xy ]; then
+		  search --no-floppy --fs-uuid --set=root --hint='hd0,msdos2'  97d1bdcb-648f-42fe-9448-840b7fa6ec13
+		else
+		  search --no-floppy --fs-uuid --set=root 97d1bdcb-648f-42fe-9448-840b7fa6ec13
+		fi
+		echo	'Loading Linux xen ...'
+		linux	/boot/vmlinuz-xen root=UUID=97d1bdcb-648f-42fe-9448-840b7fa6ec13  ${extra_cmdline} console=xvc0 xencons=xvc resume=/dev/xvda1 splash=silent quiet showopts
+		echo	'Loading initial ramdisk ...'
+		initrd	/boot/initrd-xen
+	}
+	menuentry 'SLES 12-SP1, with Linux 3.12.49-11-xen'  --class sles --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-3.12.49-11-xen-advanced-97d1bdcb-648f-42fe-9448-840b7fa6ec13' {
+		load_video
+		set gfxpayload=keep
+		insmod gzio
+		insmod part_msdos 
+		insmod btrfs
+		set root='hd0,msdos2'
+		if [ x$feature_platform_search_hint = xy ]; then
+		  search --no-floppy --fs-uuid --set=root --hint='hd0,msdos2'  97d1bdcb-648f-42fe-9448-840b7fa6ec13
+		else
+		  search --no-floppy --fs-uuid --set=root 97d1bdcb-648f-42fe-9448-840b7fa6ec13
+		fi
+		echo	'Loading Linux 3.12.49-11-xen ...'
+		linux	/boot/vmlinuz-3.12.49-11-xen root=UUID=97d1bdcb-648f-42fe-9448-840b7fa6ec13  ${extra_cmdline} console=xvc0 xencons=xvc resume=/dev/xvda1 splash=silent quiet showopts
+		echo	'Loading initial ramdisk ...'
+		initrd	/boot/initrd-3.12.49-11-xen
+	}
+}
+
+### END /etc/grub.d/10_linux ###
+
+### BEGIN /etc/grub.d/20_linux_xen ###
+### END /etc/grub.d/20_linux_xen ###
+
+### BEGIN /etc/grub.d/20_memtest86+ ###
+### END /etc/grub.d/20_memtest86+ ###
+
+### BEGIN /etc/grub.d/30_os-prober ###
+### END /etc/grub.d/30_os-prober ###
+
+### BEGIN /etc/grub.d/40_custom ###
+# This file provides an easy way to add custom menu entries.  Simply type the
+# menu entries you want to add after this comment.  Be careful not to change
+# the 'exec tail' line above.
+### END /etc/grub.d/40_custom ###
+
+### BEGIN /etc/grub.d/41_custom ###
+if [ -f  ${config_directory}/custom.cfg ]; then
+  source ${config_directory}/custom.cfg
+elif [ -z "${config_directory}" -a -f  $prefix/custom.cfg ]; then
+  source $prefix/custom.cfg;
+fi
+### END /etc/grub.d/41_custom ###
+
+### BEGIN /etc/grub.d/80_suse_btrfs_snapshot ###
+if [ -f "/.snapshots/grub-snapshot.cfg" ]; then
+  source "/.snapshots/grub-snapshot.cfg"
+fi
+### END /etc/grub.d/80_suse_btrfs_snapshot ###
+
+### BEGIN /etc/grub.d/90_persistent ###
+### END /etc/grub.d/90_persistent ###
diff --git a/tools/pygrub/examples/ubuntu-12.04-lts.grub2 b/tools/pygrub/examples/ubuntu-12.04-lts.grub2
new file mode 100644
index 0000000..59cb278
--- /dev/null
+++ b/tools/pygrub/examples/ubuntu-12.04-lts.grub2
@@ -0,0 +1,166 @@
+#
+# DO NOT EDIT THIS FILE
+#
+# It is automatically generated by grub-mkconfig using templates
+# from /etc/grub.d and settings from /etc/default/grub
+#
+
+### BEGIN /etc/grub.d/00_header ###
+if [ -s $prefix/grubenv ]; then
+  set have_grubenv=true
+  load_env
+fi
+set default="0"
+if [ "${prev_saved_entry}" ]; then
+  set saved_entry="${prev_saved_entry}"
+  save_env saved_entry
+  set prev_saved_entry=
+  save_env prev_saved_entry
+  set boot_once=true
+fi
+
+function savedefault {
+  if [ -z "${boot_once}" ]; then
+    saved_entry="${chosen}"
+    save_env saved_entry
+  fi
+}
+
+function recordfail {
+  set recordfail=1
+  if [ -n "${have_grubenv}" ]; then if [ -z "${boot_once}" ]; then save_env recordfail; fi; fi
+}
+
+function load_video {
+  insmod vbe
+  insmod vga
+  insmod video_bochs
+  insmod video_cirrus
+}
+
+insmod part_msdos
+insmod ext2
+set root='(hd0,msdos1)'
+search --no-floppy --fs-uuid --set=root 0d39ad7d-f6d5-49bb-a8ec-1f94b995b2f7
+if loadfont /usr/share/grub/unicode.pf2 ; then
+  set gfxmode=auto
+  load_video
+  insmod gfxterm
+  insmod part_msdos
+  insmod ext2
+  set root='(hd0,msdos1)'
+  search --no-floppy --fs-uuid --set=root 0d39ad7d-f6d5-49bb-a8ec-1f94b995b2f7
+  set locale_dir=($root)/boot/grub/locale
+  set lang=en_US
+  insmod gettext
+fi
+terminal_output gfxterm
+if [ "${recordfail}" = 1 ] ; then
+  set timeout=30
+else
+  if [ x$feature_timeout_style = xy ] ; then
+    set timeout_style=hidden
+    set timeout=0
+  # Fallback hidden-timeout code in case the timeout_style feature is
+  # unavailable.
+  elif sleep --interruptible 0 ; then
+    set timeout=0
+  fi
+fi
+### END /etc/grub.d/00_header ###
+
+### BEGIN /etc/grub.d/05_debian_theme ###
+set menu_color_normal=white/black
+set menu_color_highlight=black/light-gray
+### END /etc/grub.d/05_debian_theme ###
+
+### BEGIN /etc/grub.d/10_linux ###
+function gfxmode {
+	set gfxpayload="${1}"
+	if [ "${1}" = "keep" ]; then
+		set vt_handoff=vt.handoff=7
+	else
+		set vt_handoff=
+	fi
+}
+if [ "${recordfail}" != 1 ]; then
+  if [ -e ${prefix}/gfxblacklist.txt ]; then
+    if hwmatch ${prefix}/gfxblacklist.txt 3; then
+      if [ ${match} = 0 ]; then
+        set linux_gfx_mode=keep
+      else
+        set linux_gfx_mode=text
+      fi
+    else
+      set linux_gfx_mode=text
+    fi
+  else
+    set linux_gfx_mode=keep
+  fi
+else
+  set linux_gfx_mode=text
+fi
+export linux_gfx_mode
+if [ "${linux_gfx_mode}" != "text" ]; then load_video; fi
+menuentry 'Ubuntu, with Linux 3.13.0-32-generic' --class ubuntu --class gnu-linux --class gnu --class os {
+	recordfail
+	gfxmode $linux_gfx_mode
+	insmod gzio
+	insmod part_msdos
+	insmod ext2
+	set root='(hd0,msdos1)'
+	search --no-floppy --fs-uuid --set=root 0d39ad7d-f6d5-49bb-a8ec-1f94b995b2f7
+	linux	/boot/vmlinuz-3.13.0-32-generic root=UUID=0d39ad7d-f6d5-49bb-a8ec-1f94b995b2f7 ro console=hvc0  splash quiet $vt_handoff
+	initrd	/boot/initrd.img-3.13.0-32-generic
+}
+menuentry 'Ubuntu, with Linux 3.13.0-32-generic (recovery mode)' --class ubuntu --class gnu-linux --class gnu --class os {
+	recordfail
+	insmod gzio
+	insmod part_msdos
+	insmod ext2
+	set root='(hd0,msdos1)'
+	search --no-floppy --fs-uuid --set=root 0d39ad7d-f6d5-49bb-a8ec-1f94b995b2f7
+	echo	'Loading Linux 3.13.0-32-generic ...'
+	linux	/boot/vmlinuz-3.13.0-32-generic root=UUID=0d39ad7d-f6d5-49bb-a8ec-1f94b995b2f7 ro recovery nomodeset console=hvc0
+	echo	'Loading initial ramdisk ...'
+	initrd	/boot/initrd.img-3.13.0-32-generic
+}
+### END /etc/grub.d/10_linux ###
+
+### BEGIN /etc/grub.d/20_linux_xen ###
+### END /etc/grub.d/20_linux_xen ###
+
+### BEGIN /etc/grub.d/20_memtest86+ ###
+menuentry "Memory test (memtest86+)" {
+	insmod part_msdos
+	insmod ext2
+	set root='(hd0,msdos1)'
+	search --no-floppy --fs-uuid --set=root 0d39ad7d-f6d5-49bb-a8ec-1f94b995b2f7
+	linux16	/boot/memtest86+.bin
+}
+menuentry "Memory test (memtest86+, serial console 115200)" {
+	insmod part_msdos
+	insmod ext2
+	set root='(hd0,msdos1)'
+	search --no-floppy --fs-uuid --set=root 0d39ad7d-f6d5-49bb-a8ec-1f94b995b2f7
+	linux16	/boot/memtest86+.bin console=ttyS0,115200n8
+}
+### END /etc/grub.d/20_memtest86+ ###
+
+### BEGIN /etc/grub.d/30_os-prober ###
+### END /etc/grub.d/30_os-prober ###
+
+### BEGIN /etc/grub.d/30_uefi-firmware ###
+### END /etc/grub.d/30_uefi-firmware ###
+
+### BEGIN /etc/grub.d/40_custom ###
+# This file provides an easy way to add custom menu entries.  Simply type the
+# menu entries you want to add after this comment.  Be careful not to change
+# the 'exec tail' line above.
+### END /etc/grub.d/40_custom ###
+
+### BEGIN /etc/grub.d/41_custom ###
+if [ -f  $prefix/custom.cfg ]; then
+  source $prefix/custom.cfg;
+fi
+### END /etc/grub.d/41_custom ###
diff --git a/tools/pygrub/src/GrubConf.py b/tools/pygrub/src/GrubConf.py
index dc810d5..b794bc4 100644
--- a/tools/pygrub/src/GrubConf.py
+++ b/tools/pygrub/src/GrubConf.py
@@ -373,6 +373,7 @@ class Grub2ConfigFile(_GrubConfigFile):
             lines = buf.split("\n")
 
         in_function = False
+        in_if = False
         img = None
         title = ""
         menu_level=0
@@ -389,9 +390,18 @@ class Grub2ConfigFile(_GrubConfigFile):
             if l.startswith('function'):
                 in_function = True
                 continue
-            if in_function:
+            elif l.startswith('if'):
+                # Try to handle single-line if statements
+                if 'fi' in [i.strip() for i in l.split(';')]:
+                    continue
+
+                in_if = True
+                continue
+            if in_function or in_if:
                 if l.startswith('}'):
                     in_function = False
+                elif l.startswith('fi'):
+                    in_if = False
                 continue
 
             # new image
