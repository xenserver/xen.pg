From 852b162c8255b2bdecde76e89e272149548e0669 Mon Sep 17 00:00:00 2001
From: Sergey Dyasli <sergey.dyasli@citrix.com>
Date: Wed, 7 Nov 2018 09:31:17 +0000
Subject: [PATCH] Allocate space in structs pre-emptively to increase chances
 of livepatching

1. Expand FEATURESET for 4 more words
2. Increment CPUID_GUEST_NR_FEAT to get an additional feature leaf
   in struct cpuid_policy
3. Reserve space in the following structs:

    grant_table
    vtd_iommu
    amd_iommu
    guest_iommu
    hvm_ioreq_vcpu
    hvm_ioreq_server
    msr_domain_policy
    msr_vcpu_policy
    p2m_domain

Signed-off-by: Sergey Dyasli <sergey.dyasli@citrix.com>
diff --git a/xen/common/grant_table.c b/xen/common/grant_table.c
index e2f46dcc70d8..a7b5fb998a77 100644
--- a/xen/common/grant_table.c
+++ b/xen/common/grant_table.c
@@ -94,6 +94,9 @@ struct grant_table {
     const struct domain *domain;
 
     struct grant_table_arch arch;
+
+    /* Reserved space */
+    uint64_t _rsvd_livepatch[2];
 };
 
 static int parse_gnttab_limit(const char *param, const char *arg,
diff --git a/xen/drivers/passthrough/vtd/iommu.h b/xen/drivers/passthrough/vtd/iommu.h
index 6e2a9ee56045..7b96b58265ea 100644
--- a/xen/drivers/passthrough/vtd/iommu.h
+++ b/xen/drivers/passthrough/vtd/iommu.h
@@ -537,6 +537,9 @@ struct vtd_iommu {
     unsigned long *domid_bitmap;  /* domain id bitmap */
     u16 *domid_map;               /* domain id mapping array */
     uint32_t version;
+
+    /* Reserved space */
+    uint64_t _rsvd_livepatch[2];
 };
 
 #define INTEL_IOMMU_DEBUG(fmt, args...) \
diff --git a/xen/include/asm-x86/amd-iommu.h b/xen/include/asm-x86/amd-iommu.h
index 452ce97c0269..f82814b44280 100644
--- a/xen/include/asm-x86/amd-iommu.h
+++ b/xen/include/asm-x86/amd-iommu.h
@@ -104,6 +104,9 @@ struct amd_iommu {
     int enabled;
 
     struct list_head ats_devices;
+
+    /* Reserved space */
+    uint64_t _rsvd_livepatch[2];
 };
 
 struct ivrs_unity_map {
@@ -188,6 +191,9 @@ struct guest_iommu {
 
     /* guest interrupt settings */
     struct guest_iommu_msi  msi;
+
+    /* Reserved space */
+    uint64_t _rsvd_livepatch[2];
 };
 
 extern bool_t iommuv2_enabled;
diff --git a/xen/include/asm-x86/hvm/domain.h b/xen/include/asm-x86/hvm/domain.h
index bcc5621797df..1e415b5c3fac 100644
--- a/xen/include/asm-x86/hvm/domain.h
+++ b/xen/include/asm-x86/hvm/domain.h
@@ -46,6 +46,9 @@ struct hvm_ioreq_vcpu {
     struct vcpu      *vcpu;
     evtchn_port_t    ioreq_evtchn;
     bool             pending;
+
+    /* Reserved space */
+    uint64_t _rsvd_livepatch[1];
 };
 
 #define NR_IO_RANGE_TYPES (XEN_DMOP_IO_RANGE_PCI + 1)
@@ -67,6 +70,9 @@ struct hvm_ioreq_server {
     struct rangeset        *range[NR_IO_RANGE_TYPES];
     bool                   enabled;
     uint8_t                bufioreq_handling;
+
+    /* Reserved space */
+    uint64_t _rsvd_livepatch[2];
 };
 
 /*
diff --git a/xen/include/asm-x86/msr.h b/xen/include/asm-x86/msr.h
index d1d8e2de3806..d7b4737cdc91 100644
--- a/xen/include/asm-x86/msr.h
+++ b/xen/include/asm-x86/msr.h
@@ -335,6 +335,9 @@ struct vcpu_msrs
      * values here may be stale in current context.
      */
     uint32_t dr_mask[4];
+
+    /* Reserved space */
+    uint64_t _rsvd_livepatch[2];
 };
 
 void init_guest_msr_policy(void);
diff --git a/xen/include/asm-x86/p2m.h b/xen/include/asm-x86/p2m.h
index 8ba8cd6a022c..640a111a0f25 100644
--- a/xen/include/asm-x86/p2m.h
+++ b/xen/include/asm-x86/p2m.h
@@ -368,6 +368,9 @@ struct p2m_domain {
          unsigned int flags;
          unsigned long entry_count;
      } ioreq;
+
+    /* Reserved space */
+    uint64_t _rsvd_livepatch[2];
 };
 
 /* get host p2m table */
diff --git a/xen/include/xen/lib/x86/cpuid.h b/xen/include/xen/lib/x86/cpuid.h
index fa98b371eef4..8fc69cd13251 100644
--- a/xen/include/xen/lib/x86/cpuid.h
+++ b/xen/include/xen/lib/x86/cpuid.h
@@ -85,7 +85,7 @@ const char *x86_cpuid_vendor_to_str(unsigned int vendor);
 
 #define CPUID_GUEST_NR_BASIC      (0xdu + 1)
 #define CPUID_GUEST_NR_CACHE      (5u + 1)
-#define CPUID_GUEST_NR_FEAT       (2u + 1)
+#define CPUID_GUEST_NR_FEAT       (3u + 1)
 #define CPUID_GUEST_NR_TOPO       (1u + 1)
 #define CPUID_GUEST_NR_XSTATE     (62u + 1)
 #define CPUID_GUEST_NR_EXTD_INTEL (0x8u + 1)
@@ -338,6 +338,8 @@ struct cpuid_policy
 static inline void cpuid_policy_to_featureset(
     const struct cpuid_policy *p, uint32_t fs[FEATURESET_NR_ENTRIES])
 {
+    unsigned int i;
+
     fs[FEATURESET_1d]  = p->basic._1d;
     fs[FEATURESET_1c]  = p->basic._1c;
     fs[FEATURESET_e1d] = p->extd.e1d;
@@ -354,6 +356,10 @@ static inline void cpuid_policy_to_featureset(
     fs[FEATURESET_7d2] = p->feat._7d2;
     fs[FEATURESET_7c1] = p->feat._7c1;
     fs[FEATURESET_7d1] = p->feat._7d1;
+
+    /* Zero reserved featureset words */
+    for ( i = FEATURESET_7d1 + 1; i < FEATURESET_NR_ENTRIES; i++ )
+        fs[i] = 0;
 }
 
 /* Fill in a CPUID policy from a featureset bitmap. */
diff --git a/xen/include/xen/lib/x86/msr.h b/xen/include/xen/lib/x86/msr.h
index 48ba4a59c036..aef4f7470936 100644
--- a/xen/include/xen/lib/x86/msr.h
+++ b/xen/include/xen/lib/x86/msr.h
@@ -45,6 +45,9 @@ struct msr_policy
             bool taa_no:1;
         };
     } arch_caps;
+
+    /* Reserved space */
+    uint64_t _rsvd_livepatch[2];
 };
 
 #ifdef __XEN__
diff --git a/xen/tools/gen-cpuid.py b/xen/tools/gen-cpuid.py
index ce8dcb6fe28c..d6740479006f 100755
--- a/xen/tools/gen-cpuid.py
+++ b/xen/tools/gen-cpuid.py
@@ -151,6 +151,9 @@ def format_uint32s(state, featureset, indent):
 
 def crunch_numbers(state):
 
+    # Reserved space
+    state.nr_entries += 4
+
     # Features common between 1d and e1d.
     common_1d = (FPU, VME, DE, PSE, TSC, MSR, PAE, MCE, CX8, APIC,
                  MTRR, PGE, MCA, CMOV, PAT, PSE36, MMX, FXSR)
