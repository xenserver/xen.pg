From 694d79ed5aac38f50f3f096e4aff6e6cd207ccdb Mon Sep 17 00:00:00 2001
From: Andrew Cooper <andrew.cooper3@citrix.com>
Date: Wed, 3 May 2023 19:49:26 +0100
Subject: x86/ucode: Refresh raw CPU policy after microcode load
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Loading microcode can cause new features to appear.  This has happened
routinely since Spectre/Meltdown, and even the presence of new status bits can
sometimes mean the administrator has no further actions to perform.

Conversely, loading microcode can occasionally cause features to disappear.
As with livepatching, it is very much the administrators responsibility to
confirm that a late microcode load is safe on the intended system before
rolling it out in production.

Refresh the raw CPU policy after late microcode load appears to have done
something, so xen-cpuid can reflect the updated state of the system.

Signed-off-by: Andrew Cooper <andrew.cooper3@citrix.com>
Reviewed-by: Jan Beulich <jbeulich@suse.com>
Acked-by: Roger Pau Monn√© <roger.pau@citrix.com>

diff --git a/xen/arch/x86/cpuid.c b/xen/arch/x86/cpuid.c
index dc3b452e73..6b45b01355 100644
--- a/xen/arch/x86/cpuid.c
+++ b/xen/arch/x86/cpuid.c
@@ -284,7 +284,7 @@ static void recalculate_misc(struct cpuid_policy *p)
     }
 }
 
-static void __init calculate_raw_policy(void)
+void cpuid_calculate_raw_policy(void)
 {
     struct cpuid_policy *p = &raw_cpuid_policy;
 
@@ -460,7 +460,7 @@ static void __init calculate_hvm_max_policy(void)
 
 void __init init_guest_cpuid(void)
 {
-    calculate_raw_policy();
+    cpuid_calculate_raw_policy();
     calculate_host_policy();
     calculate_pv_max_policy();
     calculate_hvm_max_policy();
diff --git a/xen/arch/x86/microcode.c b/xen/arch/x86/microcode.c
index f5cc4b43b6..3a72682666 100644
--- a/xen/arch/x86/microcode.c
+++ b/xen/arch/x86/microcode.c
@@ -692,6 +692,9 @@ static long microcode_update_helper(void *data)
         spin_lock(&microcode_mutex);
         microcode_update_cache(patch);
         spin_unlock(&microcode_mutex);
+
+        /* Refresh the raw CPU policy, in case the features have changed. */
+        cpuid_calculate_raw_policy();
     }
     else
         microcode_free_patch(patch);
diff --git a/xen/include/asm-x86/cpuid.h b/xen/include/asm-x86/cpuid.h
index 1b00e832d6..6c0c403788 100644
--- a/xen/include/asm-x86/cpuid.h
+++ b/xen/include/asm-x86/cpuid.h
@@ -53,6 +53,8 @@ extern struct cpuid_policy raw_cpuid_policy, host_cpuid_policy,
 
 extern const struct cpu_policy system_policies[];
 
+void cpuid_calculate_raw_policy(void);
+
 /* Check that all previously present features are still available. */
 bool recheck_cpu_features(unsigned int cpu);
 
