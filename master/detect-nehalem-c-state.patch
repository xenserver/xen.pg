CA-49885: Restrict Intel Nehalem and Westmere class processors to a maximum
c-state level of 1 to workaround various Intel errata assoicated with these
processors.

diff --git a/xen/arch/x86/cpu/intel.c b/xen/arch/x86/cpu/intel.c
index 29c6b87..3d93f34 100644
--- a/xen/arch/x86/cpu/intel.c
+++ b/xen/arch/x86/cpu/intel.c
@@ -263,6 +263,38 @@ static void early_init_intel(struct cpuinfo_x86 *c)
 }
 
 /*
+ * Detect Intel Nehalem CPU's with C-states enabled and restrict to C1 due to
+ * Intel Errata BA80, AAK120, AAM108, AAO67, BD59, AAY54
+ */
+static void nehalem_cpu_cstate_workaround(struct cpuinfo_x86 *c)
+{
+    static bool_t nehalem_cstate_errata_workaround_warning = 0;
+
+    if ( c->x86_vendor == X86_VENDOR_INTEL && c->x86 == 6 )
+    {
+        switch ( c->x86_model )
+        {
+        /* Nehalem */
+        case 0x1A:
+        case 0x1E:
+        case 0x1F:
+        case 0x2E:
+        /* Westmere */
+        case 0x25:
+        case 0x2C:
+            if ( !nehalem_cstate_errata_workaround_warning )
+            {
+                printk(XENLOG_WARNING "Disabling C-states C3 and C6 on Nehalem"
+                        " Processors due to errata\n");
+                nehalem_cstate_errata_workaround_warning = 1;
+            }
+            max_cstate = 1;
+            break;
+        }
+    }
+}
+
+/*
  * P4 Xeon errata 037 workaround.
  * Hardware prefetcher may cause stale data to be loaded into the cache.
  *
@@ -289,6 +321,8 @@ static void Intel_errata_workarounds(struct cpuinfo_x86 *c)
 
 	if (cpu_has_tsx_force_abort && opt_rtm_abort)
 		wrmsrl(MSR_TSX_FORCE_ABORT, TSX_FORCE_ABORT_RTM);
+
+	nehalem_cpu_cstate_workaround(c);
 }
 
 
