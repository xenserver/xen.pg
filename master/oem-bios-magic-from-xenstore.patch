Use xenstore keys to customize the six bytes at 0xFFFEA

diff --git a/tools/firmware/hvmloader/hvmloader.c b/tools/firmware/hvmloader/hvmloader.c
index f603f68..5187ddf 100644
--- a/tools/firmware/hvmloader/hvmloader.c
+++ b/tools/firmware/hvmloader/hvmloader.c
@@ -202,6 +202,18 @@ static void init_vm86_tss(void)
 #undef TSS_SIZE
 }
 
+/* Replace the 6 bytes at f000:ffea with a xenstore-supplied value */
+static void init_magic_oem_bytes(void)
+{
+    const char *s = xenstore_read("bios-strings/hp-rombios", NULL);
+    if (!s || *s == '\0')
+        return;
+
+    /* Even if the xenstore value isn't six bytes long, the buffer is
+     * safe to read from, so just copy over six bytes */
+    memcpy((void *) 0xfffea, s, 6);
+}
+
 static void apic_setup(void)
 {
     /*
@@ -412,6 +424,7 @@ int main(void)
     init_vm86_tss();
 
     cmos_write_memory_size();
+    init_magic_oem_bytes();
 
     printf("BIOS map:\n");
     if ( SCRATCH_PHYSICAL_ADDRESS != scratch_start )
diff --git a/tools/firmware/rombios/rombios.c b/tools/firmware/rombios/rombios.c
index a0fdfcb..a65ad7c 100644
--- a/tools/firmware/rombios/rombios.c
+++ b/tools/firmware/rombios/rombios.c
@@ -11659,6 +11659,8 @@ int08_store_ticks:
 
 .org 0xfef3 ; Initial Interrupt Vector Offsets Loaded by POST
 
+.org 0xffea ;; OEM string
+.ascii "______"
 
 .org 0xff00
 .ascii BIOS_COPYRIGHT_STRING
