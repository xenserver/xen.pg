HP Gen8 BIOS incorrectly add GPU audio devices to the RMRR device list.
This causes domains with GPU devices passthrough to fail to start as the 
RMRR regions conflict with key memory locations in the guest memory map.
diff --git a/xen/drivers/passthrough/vtd/dmar.c b/xen/drivers/passthrough/vtd/dmar.c
index 2372cd2c74..ee0c121cf7 100644
--- a/xen/drivers/passthrough/vtd/dmar.c
+++ b/xen/drivers/passthrough/vtd/dmar.c
@@ -392,6 +392,15 @@ static int __init acpi_parse_dev_scope(
             break;
 
         case ACPI_DMAR_SCOPE_TYPE_ENDPOINT:
+            if ( !drhd && rmrr_device_quirks(seg, bus, path->dev, path->fn) )
+            {
+                if ( iommu_verbose )
+                    printk(VTDPREFIX " QUIRK: ignoring %04x:%02x:%02x.%u\n",
+                           seg, bus, path->dev, path->fn);
+                start += acpi_scope->length;
+                continue;
+            }
+
             if ( iommu_verbose )
                 printk(VTDPREFIX " endpoint: %04x:%02x:%02x.%u\n",
                        seg, bus, path->dev, path->fn);
diff --git a/xen/drivers/passthrough/vtd/dmar.h b/xen/drivers/passthrough/vtd/dmar.h
index 95bb132471..18062dc4a8 100644
--- a/xen/drivers/passthrough/vtd/dmar.h
+++ b/xen/drivers/passthrough/vtd/dmar.h
@@ -130,5 +130,6 @@ do {                                                \
 int vtd_hw_check(void);
 void disable_pmr(struct iommu *iommu);
 int is_igd_drhd(struct acpi_drhd_unit *drhd);
+int rmrr_device_quirks(u16 seg, u8 bus, u8 dev, u8 func);
 
 #endif /* _DMAR_H_ */
diff --git a/xen/drivers/passthrough/vtd/quirks.c b/xen/drivers/passthrough/vtd/quirks.c
index d6db862678..7e18131038 100644
--- a/xen/drivers/passthrough/vtd/quirks.c
+++ b/xen/drivers/passthrough/vtd/quirks.c
@@ -28,6 +28,7 @@
 #include <xen/pci_ids.h>
 #include <xen/pci_regs.h>
 #include <xen/keyhandler.h>
+#include <xen/dmi.h>
 #include <asm/msi.h>
 #include <asm/irq.h>
 #include <asm/pci.h>
@@ -540,3 +541,35 @@ void pci_vtd_quirk(const struct pci_dev *pdev)
         break;
     }
 }
+
+const static struct dmi_system_id __initconstrel rmrr_dmi_quirks[] =
+{
+    {
+        .ident    = "HP Gen 8",
+        .matches  = {
+            DMI_MATCH(DMI_SYS_VENDOR, "HP"),
+            DMI_MATCH(DMI_PRODUCT_NAME,   "Gen8")
+        }
+    },
+    {}
+};
+
+#define PCI_CLASS_AUDIO_DEVICE    0x0403
+
+int __init rmrr_device_quirks(u16 seg, u8 bus, u8 dev, u8 func)
+{
+    static __initdata int8_t match = -1;
+
+    if ( unlikely(match < 0) )
+        match = !!dmi_check_system(rmrr_dmi_quirks);
+    if ( !match )
+        return 0;
+
+    /* Match PCI audio class device not on function 0 */
+    if ( func != 0 &&
+         pci_conf_read16(seg, bus, dev, func, PCI_CLASS_DEVICE) ==
+         PCI_CLASS_AUDIO_DEVICE )
+        return 1;
+
+    return 0;
+}
