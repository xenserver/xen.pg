Adopt later changes from xapi-libs.

All later (and future) changes will exist as patches in the patch queue, then gradually upstream from here.

Note that xapi-libs and xenstore customizations (which are not appropriate for upstream) should go to the other patch xapi-libs-customize.

More updates on upstreamed libs:

* The dependency on uuid is minimal hence has been removed.
* The dependency on log is burdonsome hence has been eliminated after some refactoring [1].


Signed-off-by: Zheng Li <zheng.li@eu.citrix.com>


[1] Previously xenstore use both a specialized version of xen-api-libs' log library (log) to log xenstored activities and another customized log library (logging.ml) to log xenstored access records.

* If we keep things this way, we'll ended up maintain two similar versions of the same log library in both upstreamed xenstore and xen-api-libs/xen-api.
* If we drop the xen-api-libs' log library after merging all its functionalities to the upstreamed xenstore version, we can then maintain a single version. However, it doesn't make much sense to upstream such a complex logging library (which xenstored remotely depends on) in Xen and install it as part of xen-tools, since the log library itself is hardly related to Xen. Moreover, this will force xenstored to use the multithreaded version of the log library unnecessarily, which might reduces its performance as well.

This patch reuses xenstore's own access logging library (logging) to implement the limited number of logging functions (of xen-api-libs' log) that xenstored has previously depended upon, hence eliminate xenstore's dependency on xen-api-libs' log library all together. It abstracts the common part of both loggers so that xenstored logger and xenstore access logger are now different instances of the same logger maker. In this way, xenstored logger now supports log rotation (and its configuration) as well. Still, the logging formats are unchanged and should be compatible with previous implementation. The config options of xenstored logger are intentionally simpled though, it's now very similar to the config options of xenstore access logger.

diff --git a/tools/ocaml/Makefile.rules b/tools/ocaml/Makefile.rules
index 5d793571f4..72a67b93f9 100644
--- a/tools/ocaml/Makefile.rules
+++ b/tools/ocaml/Makefile.rules
@@ -63,7 +63,7 @@ define OCAML_LIBRARY_template
  $(1).cmxa: lib$(1)_stubs.a $(foreach obj,$($(1)_OBJS),$(obj).cmx)
 	$(call mk-caml-lib-native,$$@, -cclib -l$(1)_stubs $(foreach lib,$(LIBS_$(1)),-cclib $(lib)), $(foreach obj,$($(1)_OBJS),$(obj).cmx))
  $(1).cma: $(foreach obj,$($(1)_OBJS),$(obj).cmo)
-	$(call mk-caml-lib-bytecode,$$@, -dllib dll$(1)_stubs.so -cclib -l$(1)_stubs, $$+)
+	$(call mk-caml-lib-bytecode,$$@, -dllib dll$(1)_stubs.so -cclib -l$(1)_stubs $(foreach lib,$(LIBS_$(1)),-cclib $(lib)), $$+)
  $(1)_stubs.a: $(foreach obj,$$($(1)_C_OBJS),$(obj).o)
 	$(call mk-caml-stubs,$$@, $$+)
  lib$(1)_stubs.a: $(foreach obj,$($(1)_C_OBJS),$(obj).o)
