Introduce domain_{,un}pause_by_introspector()

This is to avoid introspection software taking a pause reference count from
d->controller_pause_count

Signed-off-by: Andrew Cooper <andrew.cooper3@citrix.com>

diff --git a/xen/common/domain.c b/xen/common/domain.c
index dc92414..cb1086b 100644
--- a/xen/common/domain.c
+++ b/xen/common/domain.c
@@ -1067,6 +1067,50 @@ int domain_unpause_by_systemcontroller(struct domain *d)
     return 0;
 }
 
+int domain_pause_by_introspector(struct domain *d)
+{
+    int old, new, prev = d->introspection_pause_count;
+
+    do
+    {
+        old = prev;
+        new = old + 1;
+
+        /*
+         * Limit the toolstack pause count to an arbitrary 255 to prevent the
+         * toolstack overflowing d->pause_count with many repeated hypercalls.
+         */
+        if ( new > 255 )
+            return -EOVERFLOW;
+
+        prev = cmpxchg(&d->introspection_pause_count, old, new);
+    } while ( prev != old );
+
+    domain_pause(d);
+
+    return 0;
+}
+
+int domain_unpause_by_introspector(struct domain *d)
+{
+    int old, new, prev = d->introspection_pause_count;
+
+    do
+    {
+        old = prev;
+        new = old - 1;
+
+        if ( new < 0 )
+            return -EINVAL;
+
+        prev = cmpxchg(&d->introspection_pause_count, old, new);
+    } while ( prev != old );
+
+    domain_unpause(d);
+
+    return 0;
+}
+
 int domain_pause_except_self(struct domain *d)
 {
     struct vcpu *v, *curr = current;
diff --git a/xen/common/domctl.c b/xen/common/domctl.c
index e253f16..167a25f 100644
--- a/xen/common/domctl.c
+++ b/xen/common/domctl.c
@@ -480,11 +480,19 @@ long do_domctl(XEN_GUEST_HANDLE_PARAM(xen_domctl_t) u_domctl)
     case XEN_DOMCTL_pausedomain:
         ret = -EINVAL;
         if ( d != current->domain )
-            ret = domain_pause_by_systemcontroller(d);
+        {
+            if ( opt_introspection_extn && current->domain->domain_id )
+                ret = domain_pause_by_introspector(d);
+            else
+                ret = domain_pause_by_systemcontroller(d);
+        }
         break;
 
     case XEN_DOMCTL_unpausedomain:
-        ret = domain_unpause_by_systemcontroller(d);
+        if ( opt_introspection_extn && current->domain->domain_id )
+            ret = domain_unpause_by_introspector(d);
+        else
+            ret = domain_unpause_by_systemcontroller(d);
         break;
 
     case XEN_DOMCTL_resumedomain:
diff --git a/xen/include/xen/sched.h b/xen/include/xen/sched.h
index af8fef1..0ab1086 100644
--- a/xen/include/xen/sched.h
+++ b/xen/include/xen/sched.h
@@ -368,6 +368,8 @@ struct domain
 
     /* Domain is paused by controller software? */
     int              controller_pause_count;
+    /* Domain is paused by introspection software? */
+    int              introspection_pause_count;
 
     int64_t          time_offset_seconds;
 
@@ -837,6 +839,9 @@ static inline int domain_pause_by_systemcontroller_nosync(struct domain *d)
     return __domain_pause_by_systemcontroller(d, domain_pause_nosync);
 }
 
+int domain_pause_by_introspector(struct domain *d);
+int domain_unpause_by_introspector(struct domain *d);
+
 /* domain_pause() but safe against trying to pause current. */
 int __must_check domain_pause_except_self(struct domain *d);
 void domain_unpause_except_self(struct domain *d);
