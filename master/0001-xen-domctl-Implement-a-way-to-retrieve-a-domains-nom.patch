From 125ba3505176ee007d83539542885c4fbee45793 Mon Sep 17 00:00:00 2001
From: Andrew Cooper <andrew.cooper3@citrix.com>
Date: Fri, 15 Jul 2016 19:26:36 +0100
Subject: [PATCH] xen/domctl: Implement a way to retrieve a domains nomigrate
 setting

xc_domain_disable_migrate() has existed for a long time, but there has never
been a way to query a domains nomigrate setting.

Rename XEN_DOMCTL_disable_migrate to XEN_DOMCTL_set_disable_migrate to be more
specific, and implement a companion XEN_DOMCTL_query_disable_migrate.

Add a get_misc_info access vector to match the existing set_misc_info.

Signed-off-by: Andrew Cooper <andrew.cooper3@citrix.com>
diff --git a/tools/flask/policy/modules/dom0.te b/tools/flask/policy/modules/dom0.te
index 272f6a4f75..87dd54c065 100644
--- a/tools/flask/policy/modules/dom0.te
+++ b/tools/flask/policy/modules/dom0.te
@@ -35,7 +35,7 @@ allow dom0_t dom0_t:domain {
 	setvcpucontext max_vcpus setaffinity getaffinity getscheduler
 	getdomaininfo getvcpuinfo getvcpucontext setdomainmaxmem setdomainhandle
 	setdebugging hypercall settime setaddrsize getaddrsize trigger
-	getpodtarget setpodtarget set_misc_info set_virq_handler
+	getpodtarget setpodtarget set_misc_info get_misc_info set_virq_handler
 };
 allow dom0_t dom0_t:domain2 {
 	set_cpu_policy gettsc settsc setscheduler set_vnumainfo
diff --git a/tools/libxc/include/xenctrl.h b/tools/libxc/include/xenctrl.h
index a0b97292b2..0d5942c3a2 100644
--- a/tools/libxc/include/xenctrl.h
+++ b/tools/libxc/include/xenctrl.h
@@ -1355,6 +1355,8 @@ int xc_domain_get_tsc_info(xc_interface *xch,
                            uint32_t *incarnation);
 
 int xc_domain_disable_migrate(xc_interface *xch, uint32_t domid);
+int xc_domain_query_disable_migrate(xc_interface *xch, uint32_t domid,
+                                    bool *migration_disabled);
 
 int xc_domain_maximum_gpfn(xc_interface *xch, uint32_t domid, xen_pfn_t *gpfns);
 
diff --git a/tools/libxc/xc_domain.c b/tools/libxc/xc_domain.c
index 7e72235d62..eca535a345 100644
--- a/tools/libxc/xc_domain.c
+++ b/tools/libxc/xc_domain.c
@@ -830,12 +830,27 @@ int xc_domain_set_time_offset(xc_interface *xch,
 int xc_domain_disable_migrate(xc_interface *xch, uint32_t domid)
 {
     DECLARE_DOMCTL;
-    domctl.cmd = XEN_DOMCTL_disable_migrate;
+    domctl.cmd = XEN_DOMCTL_set_disable_migrate;
     domctl.domain = domid;
     domctl.u.disable_migrate.disable = 1;
     return do_domctl(xch, &domctl);
 }
 
+int xc_domain_query_disable_migrate(xc_interface *xch, uint32_t domid,
+                                    bool *migration_disabled)
+{
+    int ret;
+    DECLARE_DOMCTL;
+    domctl.cmd = XEN_DOMCTL_query_disable_migrate;
+    domctl.domain = domid;
+    ret = do_domctl(xch, &domctl);
+
+    if ( ret == 0 )
+        *migration_disabled = domctl.u.disable_migrate.disable;
+
+    return ret;
+}
+
 int xc_domain_set_tsc_info(xc_interface *xch,
                            uint32_t domid,
                            uint32_t tsc_mode,
diff --git a/xen/arch/x86/domctl.c b/xen/arch/x86/domctl.c
index 62e8978ee3..804a5db8fd 100644
--- a/xen/arch/x86/domctl.c
+++ b/xen/arch/x86/domctl.c
@@ -1409,11 +1409,16 @@ long arch_do_domctl(
 
         break;
 
-    case XEN_DOMCTL_disable_migrate:
+    case XEN_DOMCTL_set_disable_migrate:
         d->disable_migrate = domctl->u.disable_migrate.disable;
         recalculate_cpuid_policy(d);
         break;
 
+    case XEN_DOMCTL_query_disable_migrate:
+        domctl->u.disable_migrate.disable = d->disable_migrate;
+        copyback = 1;
+        break;
+
     case XEN_DOMCTL_get_cpu_policy:
         /* Process the CPUID leaves. */
         if ( guest_handle_is_null(domctl->u.cpu_policy.cpuid_policy) )
diff --git a/xen/include/public/domctl.h b/xen/include/public/domctl.h
index a03e80e598..67e2b72cd7 100644
--- a/xen/include/public/domctl.h
+++ b/xen/include/public/domctl.h
@@ -723,7 +723,7 @@ struct xen_domctl_hvmcontext_partial {
     XEN_GUEST_HANDLE_64(uint8) buffer;  /* OUT: buffer to write record into */
 };
 
-/* XEN_DOMCTL_disable_migrate */
+/* XEN_DOMCTL_{set,query}_disable_migrate */
 struct xen_domctl_disable_migrate {
     uint32_t disable; /* IN: 1: disable migration and restore */
 };
@@ -1178,7 +1178,7 @@ struct xen_domctl {
 #define XEN_DOMCTL_gethvmcontext_partial         55
 #define XEN_DOMCTL_vm_event_op                   56
 #define XEN_DOMCTL_mem_sharing_op                57
-#define XEN_DOMCTL_disable_migrate               58
+#define XEN_DOMCTL_set_disable_migrate           58
 #define XEN_DOMCTL_gettscinfo                    59
 #define XEN_DOMCTL_settscinfo                    60
 #define XEN_DOMCTL_getpageframeinfo3             61
@@ -1203,6 +1203,7 @@ struct xen_domctl {
 #define XEN_DOMCTL_vuart_op                      81
 #define XEN_DOMCTL_get_cpu_policy                82
 #define XEN_DOMCTL_set_cpu_policy                83
+#define XEN_DOMCTL_query_disable_migrate         97
 #define XEN_DOMCTL_gdbsx_guestmemio            1000
 #define XEN_DOMCTL_gdbsx_pausevcpu             1001
 #define XEN_DOMCTL_gdbsx_unpausevcpu           1002
diff --git a/xen/xsm/flask/hooks.c b/xen/xsm/flask/hooks.c
index 3b30827764..0f1d003b0d 100644
--- a/xen/xsm/flask/hooks.c
+++ b/xen/xsm/flask/hooks.c
@@ -709,9 +709,12 @@ static int flask_domctl(struct domain *d, int cmd)
         return current_has_perm(d, SECCLASS_DOMAIN, DOMAIN__SETDEBUGGING);
 
     case XEN_DOMCTL_subscribe:
-    case XEN_DOMCTL_disable_migrate:
+    case XEN_DOMCTL_set_disable_migrate:
         return current_has_perm(d, SECCLASS_DOMAIN, DOMAIN__SET_MISC_INFO);
 
+    case XEN_DOMCTL_query_disable_migrate:
+        return current_has_perm(d, SECCLASS_DOMAIN, DOMAIN__GET_MISC_INFO);
+
     case XEN_DOMCTL_set_virq_handler:
         return current_has_perm(d, SECCLASS_DOMAIN, DOMAIN__SET_VIRQ_HANDLER);
 
diff --git a/xen/xsm/flask/policy/access_vectors b/xen/xsm/flask/policy/access_vectors
index c055c14c26..b949d98fc1 100644
--- a/xen/xsm/flask/policy/access_vectors
+++ b/xen/xsm/flask/policy/access_vectors
@@ -176,8 +176,10 @@ class domain
     getpodtarget
 # XENMEM_set_pod_target
     setpodtarget
-# XEN_DOMCTL_subscribe, XEN_DOMCTL_disable_migrate
+# XEN_DOMCTL_subscribe, XEN_DOMCTL_get_disable_migrate,
     set_misc_info
+# XEN_DOMCTL_query_disable_migrate
+    get_misc_info
 # XEN_DOMCTL_set_virq_handler
     set_virq_handler
 }
