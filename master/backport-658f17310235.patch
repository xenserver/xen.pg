From 658f173102356964f24cf5659b8fe929e12928b1 Mon Sep 17 00:00:00 2001
From: Jan Beulich <jbeulich@suse.com>
Date: Tue, 6 Mar 2018 16:21:26 +0100
Subject: [PATCH] x86/srat: fix end calculation in nodes_cover_memory()

Along the lines of commit 7226486767 ("x86/srat: fix the end pfn check
in valid_numa_range()") nodes_cover_memory() also doesn't consistently
use "end": It's set to an inclusive value initially, but then compared
to the exclusive "end" field of struct node and also possibly set to
nodes[j].start, making it exclusive too. Change the initialization to
make the variable consistently exclusive.

Signed-off-by: Jan Beulich <jbeulich@suse.com>
Acked-by: Andrew Cooper <andrew.cooper3@citrix.com>
master commit: fdbed42649eb064e7c6d1bae2bdd4f46e7b2a160
master date: 2018-02-15 18:17:32 +0100
---
 xen/arch/x86/srat.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/xen/arch/x86/srat.c b/xen/arch/x86/srat.c
index 1e455cc9da..72ad27dd86 100644
--- a/xen/arch/x86/srat.c
+++ b/xen/arch/x86/srat.c
@@ -372,7 +372,7 @@ static int __init nodes_cover_memory(void)
 		}
 
 		start = e820.map[i].addr;
-		end = e820.map[i].addr + e820.map[i].size - 1;
+		end = e820.map[i].addr + e820.map[i].size;
 
 		do {
 			found = 0;
-- 
2.14.1

