From 61572dfd3d708fd83377c972480e0a2cc1abfd9c Mon Sep 17 00:00:00 2001
From: Andrew Cooper <andrew.cooper3@citrix.com>
Date: Mon, 19 Oct 2020 15:51:22 +0100
Subject: XSA-286 alt

Alternative fix for XSA-286 with better performance characteristics

Signed-off-by: Andrew Cooper <andrew.cooper3@citrix.com>

diff --git a/xen/arch/x86/mm.c b/xen/arch/x86/mm.c
index 416d7cba22..f3595e0f13 100644
--- a/xen/arch/x86/mm.c
+++ b/xen/arch/x86/mm.c
@@ -4258,7 +4258,7 @@ long do_mmu_update(
     struct vcpu *curr = current, *v = curr;
     struct domain *d = v->domain, *pt_owner = d, *pg_owner;
     struct domain_mmap_cache mapcache;
-    bool_t sync_guest = 0;
+    bool_t sync_guest = 0, full_flush = 0;
     uint32_t xsm_needed = 0;
     uint32_t xsm_checked = 0;
     int rc = put_old_guest_table(curr);
@@ -4399,14 +4399,20 @@ long do_mmu_update(
                 case PGT_l2_page_table:
                     rc = mod_l2_entry(va, l2e_from_intpte(req.val), mfn,
                                       cmd == MMU_PT_UPDATE_PRESERVE_AD, v);
+                    if ( !rc )
+                        full_flush = 1;
                     break;
                 case PGT_l3_page_table:
                     rc = mod_l3_entry(va, l3e_from_intpte(req.val), mfn,
                                       cmd == MMU_PT_UPDATE_PRESERVE_AD, v);
+                    if ( !rc )
+                        full_flush = 1;
                     break;
                 case PGT_l4_page_table:
                     rc = mod_l4_entry(va, l4e_from_intpte(req.val), mfn,
                                       cmd == MMU_PT_UPDATE_PRESERVE_AD, v);
+                    if ( !rc )
+                        full_flush = 1;
                     if ( !rc && !cpu_has_no_xpti )
                     {
                         bool_t local_in_use = 0;
@@ -4527,14 +4533,18 @@ long do_mmu_update(
 
     domain_mmap_cache_destroy(&mapcache);
 
-    if ( sync_guest )
+    if ( full_flush || sync_guest )
     {
+        unsigned int memflags = FLUSH_TLB_GLOBAL;
+
+        if ( sync_guest )
+            memflags |= FLUSH_ROOT_PGTBL;
+
         /*
          * Force other vCPU-s of the affected guest to pick up L4 entry
          * changes (if any).
          */
-        flush_mask(pt_owner->domain_dirty_cpumask,
-                   FLUSH_TLB_GLOBAL | FLUSH_ROOT_PGTBL);
+        flush_mask(pt_owner->domain_dirty_cpumask, memflags);
     }
 
     perfc_add(num_page_updates, i);
