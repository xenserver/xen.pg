livepatch: Ignore duplicate new symbols

For XenServer, we build cumulative live patches and replace so there is
only ever a single active one. This may cause duplicate new symbol
errors. Because of the lookup order (hypervisor first) and the fact that
live patches will only ever be built against the hypervisor (and not
another live patch), it should be safe to ignore these errors.

diff --git a/xen/arch/x86/Makefile b/xen/arch/x86/Makefile
index 2443fd2cc5..36ec8656ee 100644
--- a/xen/arch/x86/Makefile
+++ b/xen/arch/x86/Makefile
@@ -99,6 +99,7 @@ endif
 
 syms-warn-dup-y := --warn-dup
 syms-warn-dup-$(CONFIG_SUPPRESS_DUPLICATE_SYMBOL_WARNINGS) :=
+syms-warn-dup-$(CONFIG_LIVEPATCH) := --error-dup
 
 $(TARGET): TMP = $(@D)/.$(@F).elf32
 $(TARGET): $(TARGET)-syms $(efi-y) boot/mkelf32
diff --git a/xen/common/livepatch.c b/xen/common/livepatch.c
index 7caa30c202..a7b54aaacf 100644
--- a/xen/common/livepatch.c
+++ b/xen/common/livepatch.c
@@ -818,9 +818,6 @@ static int build_symbol_table(struct payload *payload,
             {
                 printk(XENLOG_ERR LIVEPATCH "%s: duplicate new symbol: %s\n",
                        elf->name, symtab[i].name);
-                xfree(symtab);
-                xfree(strtab);
-                return -EEXIST;
             }
             symtab[i].new_symbol = 1;
             dprintk(XENLOG_DEBUG, LIVEPATCH "%s: new symbol %s\n",
diff --git a/xen/tools/symbols.c b/xen/tools/symbols.c
index 9133d7c9f5..9f9e2c9900 100644
--- a/xen/tools/symbols.c
+++ b/xen/tools/symbols.c
@@ -599,7 +599,7 @@ static int compare_name(const void *p1, const void *p2)
 int main(int argc, char **argv)
 {
 	unsigned int i;
-	bool unsorted = false, warn_dup = false, found_dup = false;
+	bool unsorted = false, warn_dup = false, error_dup = false, found_dup = false;
 
 	if (argc >= 2) {
 		for (i = 1; i < argc; i++) {
@@ -619,6 +619,8 @@ int main(int argc, char **argv)
 				sort_by_name = 1;
 			else if (strcmp(argv[i], "--warn-dup") == 0)
 				warn_dup = true;
+			else if (strcmp(argv[i], "--error-dup") == 0)
+				warn_dup = error_dup = true;
 			else if (strcmp(argv[i], "--xensyms") == 0)
 				map_only = true;
 			else
@@ -644,7 +646,7 @@ int main(int argc, char **argv)
 		unsorted = true;
 	}
 
-	if (found_dup)
+	if (error_dup && found_dup)
 		exit(1);
 
 	if (unsorted)
