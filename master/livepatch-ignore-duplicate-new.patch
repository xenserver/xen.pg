livepatch: Ignore duplicate new symbols

For XenServer, we build cumulative live patches and replace so there is
only ever a single active one. This may cause duplicate new symbol
errors. Because of the lookup order (hypervisor first) and the fact that
live patches will only ever be built against the hypervisor (and not
another live patch), it should be safe to ignore these errors.

diff --git a/xen/arch/x86/Makefile b/xen/arch/x86/Makefile
index 77b3f9c..054901f 100644
--- a/xen/arch/x86/Makefile
+++ b/xen/arch/x86/Makefile
@@ -92,6 +92,7 @@ endif
 
 syms-warn-dup-y := --warn-dup
 syms-warn-dup-$(CONFIG_SUPPRESS_DUPLICATE_SYMBOL_WARNINGS) :=
+syms-warn-dup-$(CONFIG_LIVEPATCH) := --error-dup
 
 $(TARGET): $(TARGET)-syms $(efi-y) boot/mkelf32
 	./boot/mkelf32 $(notes_phdrs) $(TARGET)-syms $(TARGET) $(XEN_IMG_OFFSET) \
diff --git a/xen/common/livepatch.c b/xen/common/livepatch.c
index f14bcbc..640bff9 100644
--- a/xen/common/livepatch.c
+++ b/xen/common/livepatch.c
@@ -817,9 +817,6 @@ static int build_symbol_table(struct payload *payload,
             {
                 dprintk(XENLOG_ERR, LIVEPATCH "%s: duplicate new symbol: %s\n",
                         elf->name, symtab[i].name);
-                xfree(symtab);
-                xfree(strtab);
-                return -EEXIST;
             }
             symtab[i].new_symbol = 1;
             dprintk(XENLOG_DEBUG, LIVEPATCH "%s: new symbol %s\n",
diff --git a/xen/tools/symbols.c b/xen/tools/symbols.c
index 7748aee..c070202 100644
--- a/xen/tools/symbols.c
+++ b/xen/tools/symbols.c
@@ -597,7 +597,7 @@ static int compare_name(const void *p1, const void *p2)
 int main(int argc, char **argv)
 {
 	unsigned int i;
-	bool unsorted = false, warn_dup = false, found_dup = false;
+	bool unsorted = false, warn_dup = false, error_dup = false, found_dup = false;
 
 	if (argc >= 2) {
 		for (i = 1; i < argc; i++) {
@@ -617,6 +617,8 @@ int main(int argc, char **argv)
 				sort_by_name = 1;
 			else if (strcmp(argv[i], "--warn-dup") == 0)
 				warn_dup = true;
+			else if (strcmp(argv[i], "--error-dup") == 0)
+				warn_dup = error_dup = true;
 			else if (strcmp(argv[i], "--xensyms") == 0)
 				map_only = true;
 			else
@@ -642,7 +644,7 @@ int main(int argc, char **argv)
 		unsorted = true;
 	}
 
-	if (found_dup)
+	if (error_dup && found_dup)
 		exit(1);
 
 	if (unsorted)
